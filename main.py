import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import config
bot = telebot.TeleBot(config.token)


def keyboard_buttons():
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è')
    button2 = KeyboardButton('–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è')
    button3 = KeyboardButton('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è')

    markup.add(button1, button2, button3)
    return markup


def set_Inline_button():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–°—É—Ö–∏–π', callback_data="dry")


    markup.add(button1)
    return markup

def set_Inline_button_dry_gel():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('Cosrx', callback_data="cosrx")
    button2 = InlineKeyboardButton('Cerave', callback_data="cerave")
    button3 = InlineKeyboardButton('Dr.Jart+', callback_data="dr.jart")

    markup.add(button1, button2, button3)
    return markup

def set_Inline_button_dry_toner():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('Pyunkang Yul', callback_data="yul")
    button2 = InlineKeyboardButton('Jung Relief Toner', callback_data="jung")

    markup.add(button1, button2)
    return markup

def set_Inline_button_dry_cream():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('La Roche-Posay ', callback_data="roche-posay")
    button2 = InlineKeyboardButton('CeraVe', callback_data="cerave_cream")

    markup.add(button1, button2, )
    return markup

def set_Inline_button_buy_or_back():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏üõí', callback_data="cart")
    button2 = InlineKeyboardButton('‚¨Ö', callback_data="back")

    markup.add(button1, button2)
    return markup

def set_Inline_button_buy_or_back_toner():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏üõí', callback_data="cart_toner")
    button2 = InlineKeyboardButton('‚¨Ö', callback_data="back")

    markup.add(button1, button2)
    return markup

def set_Inline_button_buy_or_back_cream():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏üõí', callback_data="cart_cream")
    button2 = InlineKeyboardButton('‚¨Ö', callback_data="back")

    markup.add(button1, button2)
    return markup

def set_Inline_button_continue():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏', callback_data="continue")
    button2 = InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç–∏', callback_data="finish")

    markup.add(button1, button2)
    return markup

def set_Inline_button_finish():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç–∏', callback_data="finish")

    markup.add(button1)
    return markup


def keyboard_buttons_continue():
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è')
    button2 = KeyboardButton('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è')

    markup.add(button1, button2)
    return markup

def keyboard_buttons_continue1():
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è')

    markup.add(button1)
    return markup


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.text:
        print(message.from_user.last_name, message.from_user.first_name)
    bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —Å–∫–ª–∞—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ—Å–º–µ—Ç–∏—á–Ω–∏—Ö –∑–∞—Å–æ–±—ñ–≤ –¥–ª—è –¥–æ–≥–ª—è–¥—É c—É—Ö–æ—ó —à–∫—ñ—Ä–∏ –æ–±–ª–∏—á—á—è. –î–ª—è –ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä–∏ —Å–≤—ñ–π —Ç–∏–ø —à–∫—ñ—Ä–∏:",
                     reply_markup=set_Inline_button())

@bot.message_handler(commands=['where_to_buy'])
def send_welcome(message):
    bot.send_message(message.chat.id, "Cosrx - https://makeup.com.ua/ua/product/314143/ \nCeraVe - https://makeup.com.ua/ua/product/729293/7"
                                      "\nDr.Jart+ - https://makeup.com.ua/ua/product/597763/ \nPyunkang Yul -  https://makeup.com.ua/ua/product/610947/ "
                                      "\nSoon Jung PH 5.5 Relief Toner - https://rozetka.com.ua/306077468/p306077468/ "
                                      "\nLa Roche-Posay Nutritic Intense Riche - https://makeup.com.ua/ua/product/65079/ "
                                      "\nCeraVe Moisturizing Cream - https://makeup.com.ua/ua/product/729955/")


@bot.message_handler(commands=['about_me'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç! –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –Ü–≤–∞–Ω–∫–∞, –º–µ–Ω—ñ 15 —Ä–æ–∫—ñ–≤. –°–∞–º–µ —è —Å—Ç–≤–æ—Ä–∏–ª–∞ —Ü–µ–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç. "
                                      "–ù–∞–≤—á–∞—é—Å—è –≤ go_iteens –≤–∂–µ –ø—ñ–≤ —Ä–æ–∫—É. –°–∞–º–µ –∑–∞–≤–¥—è–∫–∏ –º–æ—ó–º –≤–∏–∫–ª–∞–¥–∞—á–∞–º —è –∑–º–æ–≥–ª–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ –±–æ—Ç–∞)")

user_choice_keyboard = " "

@bot.message_handler(content_types=['text'])
def conversation(message):
    global user_choice_keyboard
    if message.text == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è" and type_skin == "dry":
        user_choice_keyboard = "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è"
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_gel())
    if message.text == "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è" and type_skin == "dry":
        user_choice_keyboard = "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è"
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_toner())
    if message.text == "–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è" and type_skin == "dry":
        user_choice_keyboard = "–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è"
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_cream())

type_skin = " "
wish_list = list()
price = 0
choice = ""
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "dry":
        global type_skin
        type_skin = "dry"
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ø–µ–≤–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons())
        #bot.answer_callback_query(call.id, "–û—Å—å Alert-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")


    def gel_dry():
        global choice
        if call.data == "cosrx":
            choice = "cosrx"
            bot.send_photo(call.from_user.id, "https://cdn.notinoimg.com/detail_zoom/cosrx/8809416470511_01-o/cosrx-good-morning-cistici-gel___3.jpg")
            bot.send_message(call.from_user.id, "Cosrx ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 420 –≥—Ä–Ω - 150–º–ª", reply_markup=set_Inline_button_buy_or_back())

        if call.data == "cerave":
            choice = "cerave"
            bot.send_photo(call.from_user.id, "https://cdn.notinoimg.com/detail_main_mq/cerave/3337875597180_01-o/cerave-cleansers-cistici-emulze-s-hydratacnim-ucinkem___5.jpg")
            bot.send_message(call.from_user.id, "Cerave ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 291 –≥—Ä–Ω", reply_markup=set_Inline_button_buy_or_back())

        if call.data == "dr.jart":
            choice = "dr.jart"
            bot.send_photo(call.from_user.id, "https://cosibella.cz/cze_pm_Dr-Jart-Dermaclear-Micro-pH-Foam-Cistici-pena-na-oblicej-120-ml-10011_1.webp")
            bot.send_message(call.from_user.id, "Dr.Jart+ ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 600 –≥—Ä–Ω", reply_markup=set_Inline_button_buy_or_back())
    gel_dry()

    def toner_dry():
        global choice
        if call.data == "yul":
            choice = "yul"
            bot.send_photo(call.from_user.id,"https://m.media-amazon.com/images/I/512OSb20-GL._AC_UF1000,1000_QL80_.jpg")
            bot.send_message(call.from_user.id, "–ö–æ—Ä–µ–π—Å—å–∫–∏–π –±—Ä–µ–Ω–¥ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ—ó –∫–æ—Å–º–µ—Ç–∏–∫–∏ Pyunkang Yul - Essence Toner –¥–ª—è —á—É–¥–æ–≤–æ–≥–æ –ø–æ–≥–ª–∏–Ω–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏ –ª–∏—Ü—è."
                                                " –¶—ñ–Ω–∞: 413 –≥—Ä–Ω - 100–º–ª", reply_markup=set_Inline_button_buy_or_back_toner())
        if call.data == "jung":
            choice == "jung"
            bot.send_photo(call.from_user.id,
                           "https://img.joomcdn.net/76e03c33177b696074d0c9431f8ff54b97101bd8_original.jpeg")
            bot.send_message(call.from_user.id, "Soon Jung PH 5.5 Relief Toner - —Ç–æ–Ω—ñ–∫, —â–æ –∑–≤–æ–ª–æ–∂—É—î, –ø–æ–º'—è–∫—à—É—î —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª—é—î —Å—É—Ö—É —à–∫—ñ—Ä—É –æ–±–ª–∏—á—á—è. "
                                                "–¶—ñ–Ω–∞: 397 –≥—Ä–Ω - 80–º–ª", reply_markup=set_Inline_button_buy_or_back_toner())
    toner_dry()

    def cream_dry():
        global choice
        if call.data == 'roche-posay':
            choice = "roche-posay"
            bot.send_photo(call.from_user.id,
                           "https://img.the-village.com.ua/the-village.com.ua/post_image-image/9CUiF2O73cmKicSlxoDtrw.jpg")
            bot.send_message(call.from_user.id, "–ñ–∏–≤–∏–ª—å–Ω–∏–π –∫—Ä–µ–º Nutritic Intense Riche –∂–∏–≤–∏—Ç—å —ñ –∑–≤–æ–ª–æ–∂—É—î c—É—Ö—É —à–∫—ñ—Ä—É –ª–∏—Ü—è, "
                                                "–∞ —Ç–∞–∫–æ–∂ –≤—ñ–¥–Ω–æ–≤–ª—é—î —ó—ó –±–∞—Ä‚Äô—î—Ä–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é. –¶—ñ–Ω–∞: 687 –≥—Ä–Ω - 50–º–ª", reply_markup=set_Inline_button_buy_or_back_cream())
        if call.data == "cerave_cream":
            choice = "cerave_cream"
            bot.send_photo(call.from_user.id,
                           "https://img.the-village.com.ua/the-village.com.ua/post_image-image/P2IiTauGABKgxKgkM79ipA.jpg")
            bot.send_message(call.from_user.id, "–ó–≤–æ–ª–æ–∂—É–≤–∞–ª—å–Ω–∏–π –∫—Ä–µ–º –¥–ª—è —Å—É—Ö–æ—ó —Ç–∞ –¥—É–∂–µ —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏ –æ–±–ª–∏—á—á—è –π —Ç—ñ–ª–∞ CeraVe Moisturizing Cream "
                                                "–≤—ñ–¥–Ω–æ–≤–ª—é—î –ø—Ä–∏—Ä–æ–¥–Ω–∏–π –±–∞—Ä‚Äô—î—Ä —à–∫—ñ—Ä–∏, –∞ —Ç–∞–∫–æ–∂ –º—ñ—Å—Ç–∏—Ç—å –≥—ñ–∞–ª—É—Ä–æ–Ω–æ–≤—É –∫–∏—Å–ª–æ—Ç—É. –¶—ñ–Ω–∞: 482 –≥—Ä–Ω - 340–º–ª",
                             reply_markup=set_Inline_button_buy_or_back_cream())
    cream_dry()

    def add_func():
        if call.data == "continue" and user_choice_keyboard == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è":
            bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons_continue())

        if call.data == "back" and user_choice_keyboard == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è":
            bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_gel())

        if call.data == "continue" and user_choice_keyboard == "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è":
            bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons_continue1())

        if call.data == "back" and user_choice_keyboard == "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è":
            bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_toner())

        if call.data == "back" and user_choice_keyboard == "–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è":
            bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry_cream())
    add_func()

    def cart_gel():
        global price
        if call.data == "cart" and choice == "cosrx":
            price += 420
            wish_list.append("Cosrx - 300–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

        if call.data == "cart" and choice == "cerave":
            price += 291
            wish_list.append("Cerave - 200–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

        if call.data == "cart" and choice == "dr.jart":
            price += 600
            wish_list.append("Dr.Jart+ - 600–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

    cart_gel()

    def cart_toner():
        global price
        if call.data == "cart_toner" and choice == "yul":
            price += 413
            wish_list.append("Pyunkang Yul - 413–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

        if call.data == "cart_toner" and choice == "jung":
            price += 397
            wish_list.append("Soon Jung - 397–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

    cart_toner()

    def cart_cream():
        global price
        if call.data == "cart_cream" and choice == "roche-posay":
            price += 687
            wish_list.append("La Roche-Posay - 687–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ó–∞–≤–µ—Ä—à–∏—Ç–∏", reply_markup=set_Inline_button_finish())

        if call.data == "cart_cream" and choice == "cerave_cream":
            price += 482
            wish_list.append("CeraVe Cream - 482–≥—Ä–Ω")
            bot.send_message(call.from_user.id, "–ó–∞–≤–µ—Ä—à–∏—Ç–∏",
                             reply_markup=set_Inline_button_finish())
        print(wish_list)

    cart_cream()


    if call.data == "finish":
        wish_list_end = ", ".join(wish_list)
        bot.send_message(call.from_user.id, f"–û—Å—å –≤–∞—à –≤–∏–±—ñ—Ä: {wish_list_end} \n–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {price}.\n–î—è–∫—É—é, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è —Ü–∏–º –±–æ—Ç–æ–º."
                                            f" –ü–∞–º'—è—Ç–∞–π—Ç–µ, —â–æ —Å–∞–º–æ–ª—ñ–∫—É–≤–∞–Ω–Ω—è –º–æ–∂–µ –±—É—Ç–∏ —à–∫—ñ–¥–ª–∏–≤–∏–º –¥–ª—è –≤–∞—à–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è, –∞ —Ü–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–∏–ª–∞ –ª—é–¥–∏–Ω–∞, "
                                            f"—è–∫–∞ –Ω–µ —î –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–æ–º —á–∏ –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–æ–º."
                                            f" –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
        bot.send_photo(call.from_user.id, open("taehyung.png", "rb"))


bot.polling(none_stop=True)