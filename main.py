import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import config
bot = telebot.TeleBot(config.token)


def keyboard_buttons():
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è')
    button2 = KeyboardButton('–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è')
    button3 = KeyboardButton('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è')

    markup.add(button1, button2, button3)
    return markup


def set_Inline_button():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–°—É—Ö–∏–π', callback_data="dry")
    button2 = InlineKeyboardButton('–ñ–∏—Ä–Ω–∏–π', callback_data="oily")
    button3 = InlineKeyboardButton('–ù–æ—Ä–º–∞–ª—å–Ω–∏–π', callback_data="normal")

    markup.add(button1, button2, button3)
    return markup

def set_Inline_button_dry():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('Cosrx', callback_data="cosrx")
    button2 = InlineKeyboardButton('Cerave', callback_data="cerave")
    button3 = InlineKeyboardButton('Dr.Jart+', callback_data="dr.jart")

    markup.add(button1, button2, button3)
    return markup

def set_Inline_button_dry1():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('The Ordinary', callback_data="ordinary")
    button2 = InlineKeyboardButton('Ziaja', callback_data="ziaja")


    markup.add(button1, button2)
    return markup

def set_Inline_button_buy_or_back():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏üõí', callback_data="cart")
    button2 = InlineKeyboardButton('‚¨Ö', callback_data="back")

    markup.add(button1, button2)
    return markup


def set_Inline_button_continue():
    markup = InlineKeyboardMarkup()
    button1 = InlineKeyboardButton('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏', callback_data="continue")
    button2 = InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç–∏', callback_data="finish")

    markup.add(button1, button2)
    return markup

def keyboard_buttons_continue():
    markup = ReplyKeyboardMarkup()
    button1 = KeyboardButton('–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è')
    button2 = KeyboardButton('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü—è')

    markup.add(button1, button2)
    return markup

@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.text:
        print(message.from_user.last_name, message.from_user.first_name)
    bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é! –¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —Å–∫–ª–∞—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ—Å–º–µ—Ç–∏—á–Ω–∏—Ö –∑–∞—Å–æ–±—ñ–≤ –¥–ª—è –¥–æ–≥–ª—è–¥—É —Ç–≤–æ–≥–æ —Ç–∏–ø—É —à–∫—ñ—Ä–∏ –æ–±–ª–∏—á—á—è. –î–ª—è –ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä–∏ —Å–≤—ñ–π —Ç–∏–ø —à–∫—ñ—Ä–∏:",
                     reply_markup=set_Inline_button())

user_choice_keyboard = " "
@bot.message_handler(content_types=['text'])
def conversation(message):
    global user_choice_keyboard
    if message.text == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è" and type_skin == "dry":
        user_choice_keyboard = "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è"
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry())
    if message.text == "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è" and type_skin == "dry":
        user_choice_keyboard = "–¢–æ–Ω—ñ–∫ –¥–ª—è –æ–±–ª–∏—á—á—è"
        bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry1())

type_skin = " "
wish_list = list()
price = 0
choice = ""
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global type_skin
    global price
    global choice
    print("hello")
    if call.data == "dry":
        type_skin = "dry"
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ø–µ–≤–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons())
        #bot.answer_callback_query(call.id, "–û—Å—å Alert-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")

    if call.data == "oily":
        type_skin = "oily"
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ø–µ–≤–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons())

    if call.data == "normal":
        type_skin = "normal"
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ø–µ–≤–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons())


    if call.data == "cosrx":
        choice = "cosrx"
        bot.send_photo(call.from_user.id, "https://cdn.notinoimg.com/detail_zoom/cosrx/8809416470511_01-o/cosrx-good-morning-cistici-gel___3.jpg")
        bot.send_message(call.from_user.id, "Cosrx ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 400 –≥—Ä–Ω", reply_markup=set_Inline_button_buy_or_back())

    if call.data == "cerave":
        choice = "cerave"
        bot.send_photo(call.from_user.id, "https://cdn.notinoimg.com/detail_main_mq/cerave/3337875597180_01-o/cerave-cleansers-cistici-emulze-s-hydratacnim-ucinkem___5.jpg")
        bot.send_message(call.from_user.id, "Cerave ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 200 –≥—Ä–Ω", reply_markup=set_Inline_button_buy_or_back())

    if call.data == "dr.jart":
        choice = "dr.jart"
        bot.send_photo(call.from_user.id, "https://cosibella.cz/cze_pm_Dr-Jart-Dermaclear-Micro-pH-Foam-Cistici-pena-na-oblicej-120-ml-10011_1.webp")
        bot.send_message(call.from_user.id, "Dr.Jart+ ‚Äì –æ—á–∏—â—É—é—á–∏–π –≥–µ–ª—å –¥–ª—è —Å—É—Ö–æ—ó —à–∫—ñ—Ä–∏. –¶—ñ–Ω–∞: 600 –≥—Ä–Ω", reply_markup=set_Inline_button_buy_or_back())

    if call.data == "continue" and user_choice_keyboard == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è":
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∑–∞—Å—ñ–± –¥–ª—è –≥—ñ–≥—ñ—î–Ω–∏:", reply_markup=keyboard_buttons_continue())

    if call.data == "back" and user_choice_keyboard == "–ì–µ–ª—å –¥–ª—è –≤–º–∏–≤–∞–Ω–Ω—è":
        bot.send_message(call.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç:", reply_markup=set_Inline_button_dry())

    if call.data == "cart" and choice == "cosrx":
        price += 400
        wish_list.append("Cosrx - 300–≥—Ä–Ω")
        bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

    if call.data == "cart" and choice == "cerave":
        price += 200
        wish_list.append("Cerave - 200–≥—Ä–Ω")
        bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

    if call.data == "cart" and choice == "dr.jart":
        price += 600
        wish_list.append("Dr.Jart+ - 600–≥—Ä–Ω")
        bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤–∏–±—ñ—Ä –∞–±–æ –∑–∞–≤–µ—Ä—à—ñ—Ç—å", reply_markup=set_Inline_button_continue())

    if call.data == "finish":
        wish_list_end = "".join(wish_list)
        bot.send_message(call.from_user.id, f"–û—Å—å –≤–∞—à –≤–∏–±—ñ—Ä: {wish_list_end} \n–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {price}.\n–î—è–∫—É—é, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è —Ü–∏–º –±–æ—Ç–æ–º."
                                            f" –ü–∞–º'—è—Ç–∞–π—Ç–µ, —â–æ —Å–∞–º–æ–ª—ñ–∫—É–≤–∞–Ω–Ω—è –º–æ–∂–µ –±—É—Ç–∏ —à–∫—ñ–¥–ª–∏–≤–∏–º –¥–ª—è –≤–∞—à–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è, –∞ —Ü–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–∏–ª–∞ –ª—é–¥–∏–Ω–∞, —è–∫–∞ –Ω–µ —î –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–æ–º —á–∏ –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–æ–º."
                                            f" –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
        bot.send_photo(call.from_user.id, open("taehyung.jpg", "rb"))


bot.polling(none_stop=True)
print("Hello my name is Suzie")
print("Aaaa")
#.\venv\Scripts\activate
#Set-ExecutionPolicy Unrestricted -Scope Process